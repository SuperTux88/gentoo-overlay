diff --git a/cmake/FetchOnnxruntime.cmake b/cmake/FetchOnnxruntime.cmake
index 93487eb..773f335 100644
--- a/cmake/FetchOnnxruntime.cmake
+++ b/cmake/FetchOnnxruntime.cmake
@@ -98,9 +98,7 @@ else()
   else()
     set(Onnxruntime_LINK_LIBS "${onnxruntime_SOURCE_DIR}/lib/libonnxruntime.so.${Onnxruntime_VERSION}")
     set(Onnxruntime_INSTALL_LIBS
-        ${Onnxruntime_LINK_LIBS} "${onnxruntime_SOURCE_DIR}/lib/libonnxruntime_providers_shared.so"
-        "${onnxruntime_SOURCE_DIR}/lib/libonnxruntime_providers_cuda.so"
-        "${onnxruntime_SOURCE_DIR}/lib/libonnxruntime_providers_tensorrt.so")
+        ${Onnxruntime_LINK_LIBS} "${onnxruntime_SOURCE_DIR}/lib/libonnxruntime_providers_shared.so")
   endif()
   target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE ${Onnxruntime_LINK_LIBS})
   target_include_directories(${CMAKE_PROJECT_NAME} SYSTEM PUBLIC "${onnxruntime_SOURCE_DIR}/include")
diff --git a/src/background-filter.cpp b/src/background-filter.cpp
index 94a716a..9940714 100644
--- a/src/background-filter.cpp
+++ b/src/background-filter.cpp
@@ -172,10 +172,6 @@ obs_properties_t *background_filter_properties(void *data)
 
 	obs_property_list_add_string(p_use_gpu, obs_module_text("CPU"),
 				     USEGPU_CPU);
-#if defined(__linux__) && defined(__x86_64__)
-	obs_property_list_add_string(p_use_gpu, obs_module_text("GPUTensorRT"),
-				     USEGPU_TENSORRT);
-#endif
 #if _WIN32
 	obs_property_list_add_string(p_use_gpu, obs_module_text("GPUDirectML"),
 				     USEGPU_DML);
diff --git a/src/enhance-filter.cpp b/src/enhance-filter.cpp
index 268794d..1ec22ae 100644
--- a/src/enhance-filter.cpp
+++ b/src/enhance-filter.cpp
@@ -62,10 +62,6 @@ obs_properties_t *enhance_filter_properties(void *data)
 		OBS_COMBO_TYPE_LIST, OBS_COMBO_FORMAT_STRING);
 	obs_property_list_add_string(p_use_gpu, obs_module_text("CPU"),
 				     USEGPU_CPU);
-#ifdef __linux__
-	obs_property_list_add_string(p_use_gpu, obs_module_text("GPUTensorRT"),
-				     USEGPU_TENSORRT);
-#endif
 #if _WIN32
 	obs_property_list_add_string(p_use_gpu, obs_module_text("GPUDirectML"),
 				     USEGPU_DML);
